{"mappings":"oeAAAA,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBAEF,MAAMC,EAAaC,OAAOH,EAAEI,OAAOC,SAASC,MAAMC,OAChCJ,OAAOH,EAAEI,OAAOC,SAASG,KAAKD,OACjCJ,OAAOH,EAAEI,OAAOC,SAASI,OAAOF,OAK1BG,EAHP,EAGiBC,EAHdT,EAID,IAAIU,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,aAAY,KACNH,EACFF,EAAQ,CAAEM,SAAAT,EAAUJ,MAAAK,IAEpBG,EAAO,CAAEK,SAAAT,EAAUJ,MAAAK,GAAQ,GAE5BA,EAAM,IAIRS,MAAK,EAACD,SAAEA,EAAQb,MAAEA,MACjBe,QAAQC,IAAI,uBAAqBH,QAAiBb,MAAU,IAE7DiB,OAAM,EAACJ,SAAEA,EAAQb,MAAEA,MAClBe,QAAQC,IAAI,sBAAoBH,QAAeb,MAAU,IAlB/D,IAAuBI,EAAUC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const firstDelay = Number(e.target.elements.delay.value);\n  const delayStep = Number(e.target.elements.step.value);\n  const amount = Number(e.target.elements.amount.value);\n\n  createPromise(2, firstDelay);\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["parcelRequire","form","document","querySelector","addEventListener","e","preventDefault","firstDelay","Number","target","elements","delay","value","step","amount","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setInterval","position","then","console","log","catch"],"version":3,"file":"03-promises.6b90f579.js.map"}