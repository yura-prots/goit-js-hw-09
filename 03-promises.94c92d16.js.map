{"mappings":"oeAAAA,EAAA,SAkBA,IAAuBC,EAAUC,GAhBpB,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBAEiBC,OAAOF,EAAEG,OAAOC,SAAST,MAAMU,OAChCH,OAAOF,EAAEG,OAAOC,SAASE,KAAKD,OACjCH,OAAOF,EAAEG,OAAOC,SAASG,OAAOF,OAE/C,M,KAGqBX,EAYT,EAZmBC,EAYhB,KAXR,IAAIa,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQf,EAAUC,GAElBe,EAAOhB,EAAUC,EAAM,KAM1BkB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,QAAQC,IAAI,uBAAqBrB,QAAiBC,MAAU,IAE7DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBmB,QAAQC,IAAI,sBAAoBrB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const firstDelay = Number(e.target.elements.delay.value);\n  const delayStep = Number(e.target.elements.step.value);\n  const amount = Number(e.target.elements.amount.value);\n\n  return;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve(position, delay);\n    } else {\n      reject(position, delay);\n    }\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["parcelRequire","position","delay","form","document","querySelector","addEventListener","e","preventDefault","Number","target","elements","value","step","amount","Promise","resolve","reject","Math","random","then","console","log","catch"],"version":3,"file":"03-promises.94c92d16.js.map"}