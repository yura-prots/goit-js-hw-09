{"mappings":"gBAkBuBA,EAAUC,E,geAlBjCC,EAAA,SAEa,CACXC,KAAMC,SAASC,cAAc,UAG1BF,KAAKG,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBAEiBC,OAAOF,EAAEG,OAAOC,SAASV,MAAMW,OAChCH,OAAOF,EAAEG,OAAOC,SAASE,KAAKD,OACjCH,OAAOF,EAAEG,OAAOC,SAASG,OAAOF,OAE/C,M,KAGqBZ,EAYT,EAZmBC,EAYhB,KAXR,IAAIc,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQhB,EAAUC,GAElBgB,EAAOjB,EAAUC,E,KAMpBmB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE3DwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,QAAQC,IAAI,sBAAqCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const firstDelay = Number(e.target.elements.delay.value);\n  const delayStep = Number(e.target.elements.step.value);\n  const amount = Number(e.target.elements.amount.value);\n\n  return;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve(position, delay);\n    } else {\n      reject(position, delay);\n    }\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["position","delay","parcelRequire","form","document","querySelector","addEventListener","e","preventDefault","Number","target","elements","value","step","amount","Promise","resolve","reject","Math","random","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.f4f70b79.js.map"}